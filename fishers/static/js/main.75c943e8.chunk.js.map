{"version":3,"sources":["components/Layout/Layout.module.scss","assets/icons/menu.svg","assets/icons/close.svg","assets/home/fish.jpg","assets/home/fider.jpg","assets/home/fish-rod.jpg","components/Layout/Header.module.scss","assets/home/stuff.jpg","pages/Home/components/Home.module.scss","serviceWorker.js","constants/MenuConstants.js","components/Layout/Header.js","components/Layout/Footer.js","components/Layout/Layout.js","pages/Home/constants/SliderConstants.js","pages/Home/components/Home.js","pages/Contacts/components/Contacts.js","pages/App.js","index.js"],"names":["module","exports","Layout","Content","__webpack_require__","p","Header","HeaderContent","NavBlock","MobileNav","NavItem","MobileNavButton","MenuIcon","NavItemActive","Image","Boolean","window","location","hostname","match","MENU","key","label","link","state","isMenuOpen","handleResize","isOpen","document","body","clientWidth","outerWidth","_this","setState","handleToggleMenu","handleCloseMenu","handleClickOutside","drawFields","map","field","react_default","a","createElement","es","to","className","styles","activeClassName","onlyActiveOnIndex","onClick","drawMenu","react","classNames","type","src","CloseMenu","alt","MobileMenu","this","addEventListener","removeEventListener","PureComponent","enhanceWithClickOutside","Footer","children","props","Layout_Header","Layout_Footer","Component","SLIDER_CONTENT","image","FishRod","Fider","Stuff","Fish","Home","lib","arrows","transitionDuration","item","style","background","concat","Contacts","App","history","path","component","render","pages_App","hashHistory","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75c943e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__15ZyE\",\"Content\":\"Layout_Content__1oFbC\"};","module.exports = __webpack_public_path__ + \"static/media/menu.7d91c5bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.aeec2863.svg\";","module.exports = __webpack_public_path__ + \"static/media/fish.3f32a130.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fider.a90f556a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fish-rod.28144554.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1wqW6\",\"HeaderContent\":\"Header_HeaderContent__6QZvu\",\"NavBlock\":\"Header_NavBlock__3MFHL\",\"MobileNav\":\"Header_MobileNav__3jjwm\",\"NavItem\":\"Header_NavItem__3jSJt\",\"MobileNavButton\":\"Header_MobileNavButton__25n_M\",\"MenuIcon\":\"Header_MenuIcon__2u-18\",\"NavItemActive\":\"Header_NavItemActive__37c6k\"};","module.exports = __webpack_public_path__ + \"static/media/stuff.bd1ae353.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"Home_Image__27-p9\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","export const MENU = [{\n  key: \"home\",\n  label: \"Главная\",\n  link: \"/\",\n}, {\n  key: \"contacts\",\n  label: \"Контакты\",\n  link: \"/contacts\",\n}];\n","import React, {PureComponent, Fragment} from \"react\";\nimport enhanceWithClickOutside from \"react-click-outside\";\nimport {Link} from \"react-router\";\nimport classNames from \"classnames\";\n\nimport {MENU} from \"../../constants/MenuConstants\";\n\nimport MobileMenu from \"../../assets/icons/menu.svg\";\nimport CloseMenu from \"../../assets/icons/close.svg\";\nimport styles from \"./Header.module.scss\";\n\nclass Header extends PureComponent {\n  state = {\n    isMenuOpen: false,\n  };\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize = () => {\n    const width = document.body.clientWidth || window.outerWidth;\n    const isOpen = width < 768 ? this.state.isMenuOpen : false;\n    this.setState({\n      isMenuOpen: isOpen,\n    });\n  };\n\n  handleToggleMenu = () => {\n    this.setState({\n      isMenuOpen: !this.state.isMenuOpen,\n    });\n  };\n\n  handleCloseMenu = () => {\n    this.setState({\n      isMenuOpen: false,\n    });\n  };\n\n  handleClickOutside = () => {\n    const {isMenuOpen} = this.state;\n    isMenuOpen && this.handleCloseMenu();\n  };\n\n  drawFields = () => {\n    return (\n      MENU.map((field) => (\n        <Link\n          key={field.key}\n          to={field.link}\n          className={styles.NavItem}\n          activeClassName={styles.NavItemActive}\n          onlyActiveOnIndex\n          onClick={this.handleCloseMenu}\n        >\n          {field.label}\n        </Link>\n      ))\n    );\n  };\n\n  drawMenu = () => {\n    const {isMenuOpen} = this.state;\n\n    return (\n      <Fragment>\n        <div className={classNames(\"hide-sm-down\", styles.NavBlock)}>\n          {this.drawFields()}\n        </div>\n        <div className=\"hide-sm-up\">\n          <button\n            className={styles.MobileNavButton}\n            type=\"button\"\n            onClick={() => this.handleToggleMenu()}\n          >\n            {isMenuOpen && (\n              <img\n                className={styles.MenuIcon}\n                src={CloseMenu}\n                alt=\"close\"\n              />\n            )}\n            {!isMenuOpen && (\n              <img\n                className={styles.MenuIcon}\n                src={MobileMenu}\n                alt=\"menu\"\n              />\n            )}\n          </button>\n        </div>\n      </Fragment>\n    );\n  };\n\n  render() {\n    const {isMenuOpen} = this.state;\n\n    return (\n      <div className={styles.Header}>\n        <div className={styles.HeaderContent}>\n          <div>\n            Logo\n          </div>\n          {this.drawMenu()}\n        </div>\n        {isMenuOpen && (\n          <div className={styles.MobileNav}>\n            {this.drawFields()}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default enhanceWithClickOutside(Header);\n\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div>\n      Footer\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nimport \"../../styles/application.scss\";\nimport styles from \"./Layout.module.scss\";\n\nclass Layout extends Component {\n  render() {\n    const {children} = this.props;\n    return (\n      <div className={styles.Layout}>\n        <Header/>\n        <div className={styles.Content}>\n          {children}\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default Layout;\n","import Fish from \"../../../assets/home/fish.jpg\";\nimport Fider from \"../../../assets/home/fider.jpg\";\nimport FishRod from \"../../../assets/home/fish-rod.jpg\";\nimport Stuff from \"../../../assets/home/stuff.jpg\";\n\nexport const SLIDER_CONTENT = [{\n  key: \"fish-rod\",\n  image: FishRod,\n}, {\n  key: \"fider\",\n  image: Fider,\n}, {\n  key: \"stuff\",\n  image: Stuff,\n}, {\n  key: \"fish\",\n  image: Fish,\n}];\n","import React from \"react\";\nimport {Slide} from \"react-slideshow-image\";\n\nimport {SLIDER_CONTENT} from \"../constants/SliderConstants\";\n\nimport styles from \"./Home.module.scss\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Slide\n        arrows={false}\n        transitionDuration={700}\n      >\n        {SLIDER_CONTENT.map((item) => (\n          <div\n            key={item.key}\n            className={styles.Image}\n            style={{background: `url(\"${item.image}\") no-repeat center center`}}\n          />\n        ))}\n      </Slide>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Contacts = () => {\n  return (\n    <div>\n      Contacts page\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Router, Route, IndexRoute} from \"react-router\";\n\nimport Layout from \"../components/Layout/Layout\";\nimport Home from \"./Home/components/Home\";\nimport Contacts from \"./Contacts/components/Contacts\";\n\nclass App extends Component {\n  render() {\n    const {history} = this.props;\n    return (\n      <Router history={history}>\n        <Route\n          path=\"/\"\n          component={Layout}\n        >\n          <IndexRoute component={Home}/>\n          <Route\n            path=\"/contacts\"\n            component={Contacts}\n          />\n        </Route>\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default App;\n\n","import React from \"react\";\nimport {render} from \"react-dom\";\nimport {hashHistory} from \"react-router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./pages/App\";\n\nrender(\n  <App history={hashHistory}/>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}